name: CI-CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  model-deployment:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        lfs: true

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install dvc[s3]
        pip install dask[dataframe]
        pip install category_encoders


    - name: Set up DVC remote
      run: |
        dvc remote add -d hybrid-recommender-system s3://hybrid-recommender-system
        dvc remote modify hybrid-recommender-system region ap-southeast-2
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}

    - name: Run dvc pull
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ap-southeast-2
      run: dvc pull --force


    - name: Run DVC Pipeline
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ap-southeast-2
      run: dvc repro

    - name: Configure Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Add changes to Git
      run: git add .

    - name: Commit changes
      if: ${{ github.actor != 'github-actions[bot]' }}
      run: |
        git diff --cached --quiet || git commit -m "Automated commit of DVC outputs and updated code"

    - name: Push changes
      if: ${{ github.actor != 'github-actions[bot]' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: git push origin ${{ github.ref_name }}

    - name: Install test dependencies
      run: pip install pytest

    - name: Test App
      run: |
        pytest test_app.py

    - name: Stop Streamlit app
      run: |
        pkill -f "streamlit run" || echo "No streamlit app to kill"

